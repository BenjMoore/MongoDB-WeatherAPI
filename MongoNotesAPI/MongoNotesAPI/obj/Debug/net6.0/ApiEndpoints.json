[
  {
    "ContainingType": "MongoNotesAPI.Controllers.UserController",
    "Method": "CreateUser",
    "RelativePath": "api/User",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userDTO",
        "Type": "MongoNotesAPI.Models.DTOs.UserCreateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MongoNotesAPI.Controllers.UserController",
    "Method": "DeleteOlderThan30Days",
    "RelativePath": "api/User/DeleteOlderThan30Days",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MongoNotesAPI.Controllers.UserController",
    "Method": "DeleteUser",
    "RelativePath": "api/User/DeleteUser",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MongoNotesAPI.Controllers.UserController",
    "Method": "UpdateRole",
    "RelativePath": "api/User/UpdateRole",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "update",
        "Type": "ICTPRG553.Models.DTOs.UserRoleUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MongoNotesAPI.Controllers.WeatherController",
    "Method": "Delete",
    "RelativePath": "api/Weather/Delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MongoNotesAPI.Controllers.WeatherController",
    "Method": "DeleteOlderThanDays",
    "RelativePath": "api/Weather/DeleteOlderThanGivenDays",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "days",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MongoNotesAPI.Controllers.WeatherController",
    "Method": "Get",
    "RelativePath": "api/Weather/Filtered",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "deviceName",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "CreatedAfter",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "CreatedBefore",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[MongoNotesAPI.Models.WeatherSensor, ICTPRG553, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MongoNotesAPI.Controllers.WeatherController",
    "Method": "Get",
    "RelativePath": "api/Weather/GetAll",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[MongoNotesAPI.Models.WeatherSensor, ICTPRG553, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MongoNotesAPI.Controllers.WeatherController",
    "Method": "GetFiltered",
    "RelativePath": "api/Weather/GetFilteredData",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "selectedDateTime",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "deviceName",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ICTPRG553.Models.DTOs.FilteredDataDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MongoNotesAPI.Controllers.WeatherController",
    "Method": "GetHighestTemp",
    "RelativePath": "api/Weather/GetMaxTemp",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "CreatedAfter",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "CreatedBefore",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MongoNotesAPI.Controllers.WeatherController",
    "Method": "GetByID",
    "RelativePath": "api/Weather/ID",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "MongoNotesAPI.Models.WeatherSensor",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MongoNotesAPI.Controllers.WeatherController",
    "Method": "MaxPrecipitation",
    "RelativePath": "api/Weather/MaxPrecipitation",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "deviceName",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "ICTPRG553.Models.DTOs.PrecipitationDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "MongoNotesAPI.Controllers.WeatherController",
    "Method": "Post",
    "RelativePath": "api/Weather/New",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createdNote",
        "Type": "MongoNotesAPI.Models.WeatherSensor",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MongoNotesAPI.Controllers.WeatherController",
    "Method": "PostMany",
    "RelativePath": "api/Weather/PostMany",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "createdNotes",
        "Type": "System.Collections.Generic.List\u00601[[MongoNotesAPI.Models.WeatherSensor, ICTPRG553, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MongoNotesAPI.Controllers.WeatherController",
    "Method": "Precipitation",
    "RelativePath": "api/Weather/Precipitation/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "precipitation",
        "Type": "System.Double",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MongoNotesAPI.Controllers.WeatherController",
    "Method": "Put",
    "RelativePath": "api/Weather/Update/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "updatedNote",
        "Type": "MongoNotesAPI.Models.WeatherSensor",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "MongoNotesAPI.Controllers.WeatherController",
    "Method": "UpdateMany",
    "RelativePath": "api/Weather/UpdateMany",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "details",
        "Type": "MongoNotesAPI.Models.WeatherPatchDetailsDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]